{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "test",
    "fullyQualifiedName": "randomliststaff.test",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Test",
    "collectionId": "Test_randomliststaff",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  employee.run();\n  let total = 9;\n  let x = true;\n  let namer = [];\n  const namejunior = employee.data;\n  while (x) {\n    let r = Math.floor(Math.random() * namejunior.length);\n    let rr = namejunior[r];\n    if (namer.indexOf(rr) < 0) namer.push(rr);\n    if (namer.length == parseInt(total)) x = false;\n    storeValue(\"stafftotal\", namer.length);\n    storeValue(\"staffname\", namer);\n  }\n  namer = [];\n  x = true;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  employee.run();\n  let total = 9;\n  let x = true;\n  let namer = [];\n  const namejunior = employee.data;\n  while (x) {\n    let r = Math.floor(Math.random() * namejunior.length);\n    let rr = namejunior[r];\n    if (namer.indexOf(rr) < 0) namer.push(rr);\n    if (namer.length == parseInt(total)) x = false;\n    storeValue(\"stafftotal\", namer.length);\n    storeValue(\"staffname\", namer);\n  }\n  namer = [];\n  x = true;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Test_randomliststaff.test",
  "deleted": false,
  "gitSyncId": "63b6e018a9f4ff7974e6afa2_63c4fbd12f7c716d97bfe36f"
}